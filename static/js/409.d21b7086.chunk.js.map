{"version":3,"file":"static/js/409.d21b7086.chunk.js","mappings":"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","sources":["components/FormLoginUser/FormLoginUser.styled.js","components/FormLoginUser/FormLoginUser.js","pages/Login.js","../node_modules/@mui/icons-material/Visibility.js","../node_modules/@mui/icons-material/VisibilityOff.js"],"sourcesContent":["import { Grid, IconButton, Button, styled } from \"@mui/material\"\nimport { TextField as TextFieldFormik } from 'formik-mui';\nimport { Link } from \"react-router-dom\"\n\nexport const StyledTextField = styled(TextFieldFormik)`\n  /* & label.Mui-focused {\n    color: black;\n  } \n\n  & .MuiOutlinedInput-root {\n    &.Mui-focused fieldset {\n      border-color: skyblue;\n    }\n  } */\n`;\n\nexport const StyledGrid = styled(Grid)`\n  position: relative;\n`\n\nexport const StyledIconButton = styled(IconButton)`\n  position: absolute;\n  top: 23px;\n  right: 10px;\n`\n\nexport const StyledButton = styled(Button)`\n    padding: 6px 6px;\n    background-color: skyblue;\n\n    &:hover, &:focus{\n        background-color: black;\n    }\n`\n\nexport const StyledLink = styled(Link)`\n    color: inherit;\n`","import { useState } from \"react\"\nimport { useDispatch } from \"react-redux\";\nimport { setCredentials } from 'redux/auth/authSlice';\nimport { useLoginMutation } from 'redux/auth/apiSlice';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\n\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport Grid from '@mui/material/Grid';\nimport Container from '@mui/material/Container';\n\nimport { StyledTextField, StyledGrid, StyledIconButton, StyledButton, StyledLink } from \"./FormLoginUser.styled\"\n\nconst DEFAULT_VALUES = {\n    email: '',\n    password: '',\n}\n\nconst VALIDATION_SCHEMA = Yup.object().shape({\n    email: Yup.string().email('Invalid email').required('Required'),\n    password: Yup.string()\n        .min(8, 'Too Short! Min 8 symbols!')\n        .required('Required'),\n});\n\nexport const FormLoginUser = () => {\n    const [ login ] = useLoginMutation()\n    const dispatch = useDispatch()\n    const [showPassword, setShowPassword] = useState(false);\n\n    const handleClickShowPassword = () => setShowPassword((show) => !show);\n\n    const handleSubmit = async ({ name, email, password }, { resetForm }) => {\n        const user = {\n            email,\n            password,\n        }\n\n        resetForm()\n\n        try {\n            const userData = await login(user)    \n            if ( userData?.data ) {\n                dispatch(setCredentials({...userData}))\n            }\n            \n            if ( userData?.error?.status === 400 ) {\n                Notify.failure('Login error', {\n                    position: 'center-top',\n                });\n            }          \n        } catch (error){\n            console.log(error)\n        }\n    };\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <Formik\n                initialValues={ DEFAULT_VALUES }\n                validationSchema={ VALIDATION_SCHEMA }\n                onSubmit={handleSubmit}\n            >       \n            {({ isValid, dirty }) => (             \n                <Form autoComplete=\"off\">\n                    <Grid container spacing={2} sx={{ mt: 3 }}>\n                        <Grid item xs={12}>\n                            <Field\n                                component={ StyledTextField }\n                                fullWidth\n                                label=\"Email\"\n                                name=\"email\"\n                                type=\"email\"  \n                                required                \n                                />                            \n                        </Grid>\n\n                        <StyledGrid item xs={12}>\n                            <Field\n                                component={ StyledTextField }\n                                fullWidth\n                                label=\"Password\"\n                                name=\"password\"\n                                type={showPassword ? 'text' : 'password'} \n                                title=\"min 8 symbols\"       \n                                required                          \n                            />       \n\n                            <StyledIconButton\n                                aria-label=\"toggle password visibility\"\n                                onClick={handleClickShowPassword}                          \n                            >\n                                {showPassword ? <VisibilityOff /> : <Visibility />}\n                            </StyledIconButton>                     \n                        </StyledGrid>\n                    </Grid>\n\n                    <StyledButton\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        sx={{ mt: 3, mb: 2 }}\n                        disabled={!(isValid && dirty)}\n                        >\n                        Login\n                    </StyledButton>\n\n                    <Grid container justifyContent=\"center\">\n                        <Grid item>\n                            <StyledLink to=\"/registration\">\n                                Don't have account? Registration\n                            </StyledLink>\n                        </Grid>\n                    </Grid>\n                </Form> \n            )}  \n            </Formik>      \n        </Container>\n    );\n}","import { FormLoginUser } from \"../components/FormLoginUser\"\n\nconst Login = () => {\n    return(\n        <FormLoginUser/>\n    )\n}\n\nexport default Login","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\nexports.default = _default;"],"names":["StyledTextField","styled","TextFieldFormik","StyledGrid","Grid","StyledIconButton","IconButton","StyledButton","Button","StyledLink","Link","DEFAULT_VALUES","email","password","VALIDATION_SCHEMA","Yup","shape","required","min","FormLoginUser","useLoginMutation","login","dispatch","useDispatch","useState","showPassword","setShowPassword","handleClickShowPassword","show","handleSubmit","name","resetForm","user","userData","data","setCredentials","error","status","Notify","position","console","log","Container","component","maxWidth","initialValues","validationSchema","onSubmit","isValid","dirty","autoComplete","container","spacing","sx","mt","item","xs","fullWidth","label","type","title","onClick","VisibilityOff","Visibility","variant","mb","disabled","justifyContent","to","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}