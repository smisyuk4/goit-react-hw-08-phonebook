{"version":3,"file":"static/js/678.71413bc1.chunk.js","mappings":"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","sources":["components/UserMenu/UserMenu.styled.js","components/UserMenu/UserMenu.js","components/Menu/Menu.styled.js","components/Menu/Menu.js","components/Header/Header.styled.js","components/Header/Header.js"],"sourcesContent":["import { Tooltip, styled } from \"@mui/material\"\nimport { Link } from \"react-router-dom\"\n\nexport const StyledTooltip = styled(Tooltip)`\n    border: 2px solid white;\n\n    &:hover, &:focus{\n        border-color: black;\n    }\n`\n\nexport const StyledLink = styled(Link)`\n    width: 100%;\n    text-decoration: none;\n    color: inherit;\n`","import { useState } from \"react\"\nimport { useDispatch } from \"react-redux\";\nimport { setLogout } from 'redux/auth/authSlice';\nimport { useLogoutMutation } from 'redux/auth/apiSlice';\n\nimport Box from '@mui/material/Box';\nimport IconButton from '@mui/material/IconButton';\nimport Menu from '@mui/material/Menu';\nimport Avatar from '@mui/material/Avatar';\nimport MenuItem from '@mui/material/MenuItem';\nimport avatar from \"../../images/avatar.JPG\"\nimport { StyledTooltip, StyledLink } from \"./UserMenu.styled\"\n\nexport const UserMenu = () =>{   \n    const [anchorElUser, setAnchorElUser] = useState(null);\n    const [ logout ] = useLogoutMutation()\n    const dispatch = useDispatch()\n\n    const handleLogout = async () => {\n        try {\n            await logout()      \n            dispatch(setLogout())\n        } catch (error){\n            console.log(error)\n        }\n    }\n\n    const handleOpenUserMenu = (event) => {\n        setAnchorElUser(event.currentTarget);\n    };\n\n    const handleCloseUserMenu = () => {\n        setAnchorElUser(null);\n    };  \n\n    return (<>\n       <Box sx={{ flexGrow: 0 }}>\n            <StyledTooltip title=\"Open settings\">\n              <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\n                <Avatar alt=\"avatar\" src={avatar} />\n              </IconButton>\n            </StyledTooltip>\n            <Menu\n              sx={{ mt: '45px' }}\n              id=\"menu-appbar\"\n              anchorEl={anchorElUser}\n              anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              open={Boolean(anchorElUser)}\n              onClose={handleCloseUserMenu}\n            >\n             <MenuItem onClick={handleCloseUserMenu}>\n                <StyledLink to=\"profile\">\n                    Profile\n                </StyledLink>\n            </MenuItem>\n            <MenuItem onClick={()=>{\n                handleCloseUserMenu()\n                handleLogout()\n            }}>\n                <StyledLink to=\"/\">\n                    Logout\n                </StyledLink>            \n            </MenuItem>  \n            </Menu>\n          </Box>\n    </>)\n}","import { Button, styled } from \"@mui/material\"\nimport { Link } from \"react-router-dom\"\n\nexport const StyledButton = styled(Button)`\n    &:hover, &:focus{\n        color: black;\n    }\n`\n\nexport const StyledLink = styled(Link)`\n    width: 100%;\n    text-decoration: none;\n    color: inherit;\n`","import { useState } from 'react';\nimport { useSelector } from \"react-redux\";\nimport { selectIsLoggedIn } from '../../redux/selectors'; \nimport { UserMenu } from \"../UserMenu\"\n\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport { StyledButton, StyledLink } from \"./Menu.styled\"\n\nexport const BasicMenu = () =>{\n  const [anchorEl, setAnchorEl] = useState(null);\n  const isLoggedIn = useSelector(selectIsLoggedIn)\n  const open = Boolean(anchorEl);\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div>\n      {isLoggedIn ? \n      <UserMenu/> : \n      <>\n        <StyledButton\n          id=\"basic-button\"\n          aria-controls={open ? 'basic-menu' : undefined}\n          aria-haspopup=\"true\"\n          aria-expanded={open ? 'true' : undefined}\n          onClick={handleClick}\n          color=\"inherit\"\n        >\n          <MenuIcon />\n        </StyledButton>\n        <Menu\n          id=\"basic-menu\"\n          anchorEl={anchorEl}\n          open={open}\n          onClose={handleClose}\n          MenuListProps={{\n            'aria-labelledby': 'basic-button',\n          }}\n        >\n          <MenuItem onClick={handleClose}>\n            <StyledLink to=\"registration\">\n                Registration\n            </StyledLink>\n            </MenuItem>\n            <MenuItem onClick={handleClose}>\n                <StyledLink to=\"login\">\n                    Login\n                </StyledLink>            \n            </MenuItem>            \n        </Menu>\n      </>\n      }      \n    </div>\n  );\n}","import {AppBar, Toolbar, styled } from \"@mui/material\"\nimport { NavLink, Link } from \"react-router-dom\"\nimport AppShortcutIcon from '@mui/icons-material/AppShortcut';\n\nexport const StyledAppBar = styled(AppBar)`\n    position: sticky;\n    background-color: skyblue;\n`\n\nexport const StyledToolbar = styled(Toolbar)`\n    justify-content: space-between;\n`\n\nexport const StyledLink = styled(Link)`\n    display: flex;    \n    align-items: center;\n    text-decoration: none;\n    color: inherit;\n\n    &:hover, &:focus{\n        color: black;\n    }\n`\n\nexport const StyledAppShortcutIcon = styled(AppShortcutIcon)`\n    margin-right: 5px;   \n`\n\nexport const StyledNavLink = styled(NavLink)`\n    padding: 10px;\n    font-size: 18px;\n    font-weight: 500;\n    text-decoration: none;\n    color: inherit;\n\n    & .active {\n        text-decoration: underline;\n    }\n\n    &:hover, &:focus{\n        color: black;       \n    }\n`\n","import { Suspense } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectIsLoggedIn } from '../../redux/selectors'; \nimport { Outlet } from \"react-router-dom\"\nimport { BasicMenu } from \"../Menu\"\n\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { StyledAppBar, StyledToolbar, StyledLink, StyledAppShortcutIcon, StyledNavLink } from \"./Header.styled\"\n\nconst navItems = [\n  {\n    page: 'Contacts',\n    link: 'contacts'\n  },\n];\n\nexport const Header = () => {\n  const isLoggedIn = useSelector(selectIsLoggedIn)\n  return (<>     \n        <StyledAppBar>\n          <StyledToolbar>             \n              <StyledLink to=\"/\">\n                <StyledAppShortcutIcon/>\n                <Typography variant=\"h6\">\n                  Phonebook\n                </Typography>                \n              </StyledLink> \n            \n              {isLoggedIn && <Box >\n                {navItems.map(({page, link}) => (\n                    <StyledNavLink key={page} to={link}>\n                        {page}\n                    </StyledNavLink>   \n                ))}\n              </Box>}          \n\n              <BasicMenu/>\n            </StyledToolbar>\n        </StyledAppBar>      \n\n        <Suspense fallback={<div>Loading page...</div>}>\n          <main>   \n            <Container maxWidth=\"lg\">\n                <Outlet />\n            </Container>            \n          </main>\n        </Suspense>\n\n        {/* <footer>\n          <Container maxWidth=\"lg\">\n            <p>footer</p>\n          </Container>           \n        </footer> */}\n    </>\n  );\n}\n\n\n\n\n"],"names":["StyledTooltip","styled","Tooltip","StyledLink","Link","UserMenu","useState","anchorElUser","setAnchorElUser","useLogoutMutation","logout","dispatch","useDispatch","handleLogout","setLogout","console","log","handleCloseUserMenu","Box","sx","flexGrow","title","IconButton","onClick","event","currentTarget","p","Avatar","alt","src","avatar","Menu","mt","id","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","MenuItem","to","StyledButton","Button","BasicMenu","setAnchorEl","isLoggedIn","useSelector","selectIsLoggedIn","handleClose","undefined","color","MenuListProps","StyledAppBar","AppBar","StyledToolbar","Toolbar","StyledAppShortcutIcon","AppShortcutIcon","StyledNavLink","NavLink","navItems","page","link","Header","Typography","variant","map","Suspense","fallback","Container","maxWidth"],"sourceRoot":""}