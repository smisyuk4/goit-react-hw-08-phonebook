{"version":3,"file":"static/js/920.bcb9191b.chunk.js","mappings":"+aAIaA,GAAkBC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,CAAH,kLAYfE,GAAmBF,EAAAA,EAAAA,IAAOG,EAAAA,EAAPH,CAAH,4EAMhBI,GAAsBJ,EAAAA,EAAAA,IAAOK,EAAAA,EAAPL,CAAH,iLAUnBM,GAAeN,EAAAA,EAAAA,IAAOO,EAAAA,EAAPP,CAAH,iJASZQ,GAAaR,EAAAA,EAAAA,IAAOS,EAAAA,GAAPT,CAAH,6C,UCzBVU,EAAc,WACvB,OAAmBC,EAAAA,EAAAA,MAAXC,GAAR,eACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,WAAS,GAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAIMC,EAAY,mCAAG,WAAOC,GAAP,kFACjBA,EAAMC,iBACAC,EAAO,IAAIC,SAASH,EAAMI,eAE1BC,EAAU,CACZC,KAAMJ,EAAKK,IAAI,QACfC,MAAON,EAAKK,IAAI,SAChBE,SAAUP,EAAKK,IAAI,aAGvBP,EAAMU,OAAOC,QAVI,kBAaUlB,EAAOY,GAbjB,OAaPO,EAbO,OAcblB,GAASmB,EAAAA,EAAAA,KAAe,UAAID,KAdf,kDAgBbE,QAAQC,IAAR,MAhBa,0DAAH,sDAoBlB,OACI,SAACC,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,UACQ,UAACC,EAAA,EAAD,CAAKF,UAAU,OAAOG,SAAUrB,EAAcsB,GAAI,CAAEC,GAAI,GAAxD,WACI,UAACC,EAAA,GAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,WACA,SAACF,EAAA,GAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,UACI,SAAC/C,EAAD,CACA0B,KAAK,OACLsB,KAAK,OACLC,UAAQ,EACRC,WAAS,EACTC,MAAM,YACNC,aAAa,WAGjB,SAACT,EAAA,GAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,UACI,SAAC/C,EAAD,CACAiD,UAAQ,EACRC,WAAS,EACTC,MAAM,QACNzB,KAAK,QACLsB,KAAK,QACLI,aAAa,WAGjB,SAACT,EAAA,GAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,UACA,UAACM,EAAA,EAAD,CAAaH,WAAS,EAACI,QAAQ,WAA/B,WACI,SAACnD,EAAD,CAAkBoD,QAAQ,WAA1B,uBACA,SAAClD,EAAD,CACI8C,MAAM,WACNzB,KAAK,WACLuB,UAAQ,EACRD,KAAM/B,EAAe,OAAS,WAC9BuC,cACA,SAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,UACI,SAACC,EAAA,EAAD,CACA,aAAW,6BACXC,QA1DI,kBAAM1C,GAAgB,SAAC2C,GAAD,OAAWA,CAAX,GAAtB,EA2DJC,KAAK,MAHL,SAKC7C,GAAe,SAAC8C,EAAA,EAAD,KAAoB,SAACC,EAAA,EAAD,mBAQhD,SAACzD,EAAD,CACIyC,KAAK,SACLE,WAAS,EACTI,QAAQ,YACRb,GAAI,CAAEC,GAAI,EAAGuB,GAAI,GAJrB,sBAQA,SAACtB,EAAA,GAAD,CAAMC,WAAS,EAACsB,eAAe,SAA/B,UACA,SAACvB,EAAA,GAAD,CAAMG,MAAI,EAAV,UACI,SAACrC,EAAD,CAAY0D,GAAG,SAAf,oDAQvB,EClGD,EARqB,WACjB,OACI,+BACA,SAACxD,EAAD,KAGP,C","sources":["components/FormRegUser/FormRegUser.styled.js","components/FormRegUser/FormRegUser.js","pages/Registration.js"],"sourcesContent":["import { TextField, InputLabel, OutlinedInput, Button, styled } from \"@mui/material\"\n\nimport { Link } from \"react-router-dom\"\n\nexport const StyledTextField = styled(TextField)`\n  & label.Mui-focused {\n    color: black;\n  } \n\n  & .MuiOutlinedInput-root {\n    &.Mui-focused fieldset {\n      border-color: skyblue;\n    }\n  }\n`;\n\nexport const StyledInputLabel = styled(InputLabel)`\n    &.Mui-focused {\n        color: black;\n    } \n`\n\nexport const StyledOutlinedInput = styled(OutlinedInput)`\n    & .Mui-focused {\n        border-color: red;\n    } \n\n    &.Mui-focused .MuiOutlinedInput-notchedOutline {\n        border-color: skyblue;\n    }\n`\n\nexport const StyledButton = styled(Button)`\n    padding: 6px 6px;\n    background-color: skyblue;\n\n    &:hover, &:focus{\n        background-color: black;\n    }\n`\n\nexport const StyledLink = styled(Link)`\n    color: inherit;\n`","import { useState } from \"react\"\nimport { useDispatch } from \"react-redux\";\nimport { setCredentials } from 'redux/auth/authSlice';\nimport { useSignupMutation } from 'redux/auth/apiSlice';\n\nimport FormControl from '@mui/material/FormControl';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport IconButton from '@mui/material/IconButton';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\nimport { StyledTextField, StyledInputLabel, StyledOutlinedInput, StyledButton, StyledLink } from \"./FormRegUser.styled\"\n\n\nexport const FormRegUser = () => {\n    const [ signup ] = useSignupMutation()\n    const dispatch = useDispatch()\n    const [showPassword, setShowPassword] = useState(false);\n\n    const handleClickShowPassword = () => setShowPassword((show) => !show);\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        const form = new FormData(event.currentTarget);\n\n        const newUser = {\n            name: form.get('name'),\n            email: form.get('email'),\n            password: form.get('password'),\n        }\n\n        event.target.reset()\n\n        try {\n            const userData = await signup(newUser)        \n            dispatch(setCredentials({...userData}))\n        } catch (error){\n            console.log(error)\n        }\n    };\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n                <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 3 }}>\n                    <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <StyledTextField                    \n                        name=\"name\"\n                        type=\"text\"\n                        required\n                        fullWidth \n                        label=\"User Name\"\n                        autoComplete=\"off\"\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <StyledTextField\n                        required\n                        fullWidth\n                        label=\"Email\"\n                        name=\"email\"\n                        type=\"email\"\n                        autoComplete=\"off\"\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                    <FormControl fullWidth variant=\"outlined\">\n                        <StyledInputLabel htmlFor=\"password\">Password</StyledInputLabel>\n                        <StyledOutlinedInput\n                            label=\"Password\"\n                            name=\"password\"     \n                            required                                                   \n                            type={showPassword ? 'text' : 'password'}                            \n                            endAdornment={\n                            <InputAdornment position=\"end\">\n                                <IconButton\n                                aria-label=\"toggle password visibility\"\n                                onClick={handleClickShowPassword}\n                                edge=\"end\"\n                                >\n                                {showPassword ? <VisibilityOff /> : <Visibility />}\n                                </IconButton>\n                            </InputAdornment>\n                            }                 \n                        />\n                        </FormControl>\n                    </Grid>\n                    </Grid>\n                    <StyledButton\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        sx={{ mt: 3, mb: 2 }}\n                        >\n                        Sign Up\n                    </StyledButton>\n                    <Grid container justifyContent=\"center\">\n                    <Grid item>\n                        <StyledLink to=\"/login\">\n                            Already have an account? Login\n                        </StyledLink>\n                    </Grid>\n                    </Grid>\n                </Box>      \n        </Container>\n    );\n}","import { FormRegUser } from \"../components/FormRegUser\"\n\nconst Registration = () => {\n    return(     \n        <>\n        <FormRegUser/>\n        </>\n    )\n}\n\nexport default Registration"],"names":["StyledTextField","styled","TextField","StyledInputLabel","InputLabel","StyledOutlinedInput","OutlinedInput","StyledButton","Button","StyledLink","Link","FormRegUser","useSignupMutation","signup","dispatch","useDispatch","useState","showPassword","setShowPassword","handleSubmit","event","preventDefault","form","FormData","currentTarget","newUser","name","get","email","password","target","reset","userData","setCredentials","console","log","Container","component","maxWidth","Box","onSubmit","sx","mt","Grid","container","spacing","item","xs","type","required","fullWidth","label","autoComplete","FormControl","variant","htmlFor","endAdornment","InputAdornment","position","IconButton","onClick","show","edge","VisibilityOff","Visibility","mb","justifyContent","to"],"sourceRoot":""}