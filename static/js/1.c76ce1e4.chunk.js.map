{"version":3,"file":"static/js/1.c76ce1e4.chunk.js","mappings":"gWAEaA,GAAeC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,CAAH,0H,UCyCZE,EAAiB,WAC1B,OAAmBC,EAAAA,EAAAA,MAAXC,GAAR,eACQC,GAASC,EAAAA,EAAAA,MAATD,KAEFE,EAAY,mCAAG,WAAOC,GAAP,4EACjBA,EAAMC,iBACAC,EAAO,IAAIC,SAASH,EAAMI,eAE1BC,EAAa,CACfC,KAAMJ,EAAKK,IAAI,QACfC,OAAQN,EAAKK,IAAI,WAIhBE,EAAUJ,EAAWC,KAAMT,GAVf,0CAYHD,EAAOS,GAZJ,OAaTK,EAAAA,OAAAA,QAAe,uCAAwC,CACvCC,SAAU,eAdjB,kDAiBTC,QAAQC,IAAR,MAjBS,QAmBbb,EAAMc,OAAOC,QAnBA,wBAqBbC,EAAAA,OAAAA,QACI,QACA,0CACA,QAxBS,0DAAH,sDA6BlB,OACA,SAACC,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,UACI,UAACC,EAAA,EAAD,CAAKF,UAAU,OAAOG,SAAUtB,EAAcuB,GAAI,CAAEC,GAAI,GAAxD,WACI,UAACC,EAAA,GAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,WACA,SAACF,EAAA,GAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,UACI,SAACC,EAAA,EAAD,CACAvB,KAAK,OACLwB,KAAK,OACLC,UAAQ,EACRC,WAAS,EACTC,MAAM,YACNC,aAAa,WAGjB,SAACV,EAAA,GAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,UACI,SAACC,EAAA,EAAD,CACAE,UAAQ,EACRC,WAAS,EACTC,MAAM,eACN3B,KAAK,SACLwB,KAAK,OACLI,aAAa,cAIjB,SAAC3C,EAAD,CACIuC,KAAK,SACLE,WAAS,EACTG,QAAQ,YACRb,GAAI,CAAEC,GAAI,EAAGa,GAAI,GAJrB,wBAWX,EAEK3B,EAAY,SAACH,EAAMT,GACrB,IAAMwC,EAAU/B,EAAKgC,cACrB,OAAOzC,EAAK0C,MAAK,qBAAGjC,KAAgBgC,gBAAkBD,CAArC,GACpB,E,wCCvGKG,GAAQC,EAAAA,EAAAA,KAEDC,EAAoB,WAC7B,OAAmBC,EAAAA,EAAAA,MAAXC,GAAR,eACA,GAA2BC,EAAAA,EAAAA,IAAYC,EAAAA,IAAhCC,EAAP,EAAOA,GAAIzC,EAAX,EAAWA,KAAME,EAAjB,EAAiBA,OACXwC,GAAWC,EAAAA,EAAAA,MAEXlD,EAAY,mCAAG,WAAOC,GAAP,4EACjBA,EAAMC,iBACAC,EAAO,IAAIC,SAASH,EAAMI,eAE1BC,EAAa,CACf0C,GAAAA,EACAzC,KAAMJ,EAAKK,IAAI,QACfC,OAAQN,EAAKK,IAAI,WAGrBP,EAAMc,OAAOC,QAVI,SAaVT,IAASD,EAAWC,MAAQE,IAAUH,EAAWG,OAbvC,gCAcHoC,EAAOvC,GAdJ,OAeTK,EAAAA,OAAAA,QACI,yCACA,CAAEC,SAAU,eAjBP,OAmBbqC,GAASE,EAAAA,EAAAA,OAnBI,kDAqBbtC,QAAQC,IAAR,MArBa,0DAAH,sDAyBlB,OACA,SAACsC,EAAA,EAAD,CAAeX,MAAOA,EAAtB,UACA,UAACvB,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,WACI,SAACiC,EAAA,GAAD,KACA,SAAChC,EAAA,EAAD,CACAE,GAAI,CACA+B,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UALhB,UAQI,UAACpC,EAAA,EAAD,CAAKF,UAAU,OAAOG,SAAUtB,EAAcuB,GAAI,CAAEC,GAAI,GAAxD,WACI,UAACC,EAAA,GAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,WACA,SAACF,EAAA,GAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,UACI,SAACC,EAAA,EAAD,CACAvB,KAAK,OACLwB,KAAK,OACL2B,aAAcnD,EACdyB,UAAQ,EACRC,WAAS,EACTC,MAAM,YACNC,aAAa,WAGjB,SAACV,EAAA,GAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,UACI,SAACC,EAAA,EAAD,CACAE,UAAQ,EACRC,WAAS,EACTC,MAAM,eACN3B,KAAK,SACLwB,KAAK,OACL2B,aAAcjD,EACd0B,aAAa,cAIjB,SAACzC,EAAA,EAAD,CACIqC,KAAK,SACLE,WAAS,EACTG,QAAQ,YACRb,GAAI,CAAEC,GAAI,EAAGa,GAAI,GAJrB,6BAcf,EC5FYsB,EAAS,WAClB,IAAMV,GAAWC,EAAAA,EAAAA,MAMjB,OACI,SAAC7B,EAAA,EAAD,CAAKF,UAAU,MAAMI,GAAI,CAAEX,SAAU,SAAUgD,IAAK,QAApD,UACI,SAAC9B,EAAA,EAAD,CACQvB,KAAK,OACLwB,KAAK,OACLG,MAAM,wBACNC,aAAa,MACb0B,SAXQ,SAAC,GAAmB,IAAlBxD,EAAiB,EAAjBA,cACtB4C,GAASa,EAAAA,EAAAA,IAAUzD,EAAc0D,OACpC,KAcJ,E,iDCpBYC,EAAavE,EAAAA,EAAAA,GAAH,gJAQVwE,EAAgBxE,EAAAA,EAAAA,IAAH,sEAKbyE,GAA0BC,EAAAA,EAAAA,IAAUC,EAAAA,EAAVD,CAAH,gDAIvB3E,GAAe2E,EAAAA,EAAAA,IAAUzE,EAAAA,EAAVyE,CAAH,iJCVZE,EAAU,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACdtB,EAAqBsB,EAArBtB,GAAIzC,EAAiB+D,EAAjB/D,KAAME,EAAW6D,EAAX7D,OAClB,GAAmB8D,EAAAA,EAAAA,MAAXC,GAAR,eACMvB,GAAWC,EAAAA,EAAAA,MAEXuB,EAAmB,mCAAG,uGAEdD,EAAOxB,GAFO,OAGpBrC,EAAAA,OAAAA,QACA,2CACA,CAAEC,SAAU,eALQ,+CAOpBC,QAAQC,IAAR,MAPoB,wDAAH,qDAWnB4D,EAAmB,mCAAG,8EACxBzB,GAAS0B,EAAAA,EAAAA,IAAcL,IADC,2CAAH,qDAIzB,OACI,UAACN,EAAD,YACI,UAACC,EAAD,YACI,SAACC,EAAD,IACC3D,EAFL,KAEaE,MAEb,UAACmE,EAAA,EAAD,CAAaxC,QAAQ,YAAY,aAAW,gCAA5C,WACA,SAAC,EAAD,CACIyC,QAASJ,EADb,UAGQ,SAACK,EAAA,EAAD,OAER,SAAC,EAAD,CACID,QAASH,EADb,UAGQ,SAACK,EAAA,EAAD,WAKnB,ECjDYC,EAAavF,EAAAA,EAAAA,GAAH,gJCSVwF,EAAe,WACxB,OAA4ClF,EAAAA,EAAAA,MAArCD,EAAP,EAAOA,KAAMoF,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,MAAOC,EAA/B,EAA+BA,UACzBC,GAASvC,EAAAA,EAAAA,IAAYwC,EAAAA,IAE3B,GAAGJ,IAAcC,EACb,OACI,kDAIR,GAAIA,EAEA,OADAxE,EAAAA,OAAAA,QAAewE,EAAO,CAAEvE,SAAU,gBAE9B,+BAAIsE,IAAa,mCAIzB,GAAIE,EAAW,CACX,IAAMG,EAAWF,EAAO9C,cAClBiD,EAAkB1F,EAAKuF,QAAO,qBAAG9E,KAC9BgC,cAAckD,SAASF,EADI,IAGpC,OACI,4BACI,SAAC5B,EAAD,KACA,SAACqB,EAAD,UACgC,IAA3BQ,EAAgBE,QAAgBF,EAAgBG,KAAI,SAAA/D,GAAI,OAAI,SAACyC,EAAD,CAAuBC,QAAS1C,GAAlBA,EAAKoB,GAAvB,QAIxE,CACJ,ECzBD,EAXiB,WACf,IAAM4C,GAAW9C,EAAAA,EAAAA,IAAY+C,EAAAA,IAC3B,OACI,4BACI,SAAClG,EAAD,IACCiG,IAAa,SAACjD,EAAD,KACd,SAACsC,EAAD,MAGX,C","sources":["components/FormAddContact/FormAddContact.styled.js","components/FormAddContact/FormAddContact.js","components/FormChangeContact/FormChangeContact.js","components/Filter/Filter.js","components/Contact/Contact.styled.js","components/Contact/Contact.js","components/ContactsList/ContactList.styled.js","components/ContactsList/ContactsList.js","pages/Contacts.js"],"sourcesContent":["import {Button, styled } from \"@mui/material\"\n\nexport const StyledButton = styled(Button)`\n    background-color: skyblue;\n\n    &:hover, &:focus{\n        background-color: black;\n    }\n`\n","// import { useSelector } from \"react-redux\"; //useDispatch\n// import { addContact } from \"../../redux/operations\"\n// import { selectContacts } from 'redux/selectors';\n// import {Form, Field, Formik, ErrorMessage } from 'formik';\n// import * as Yup from 'yup';\n// import { IconContext } from 'react-icons';\n// import {\n//     RiContactsFill,\n//     RiUserVoiceFill,\n//     RiUserFollowFill,\n// } from 'react-icons/ri';\n\n// const REGEX_NAME = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\n// const REGEX_NUMBER =\n//     /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\n\n// const contactSchema = Yup.object().shape({\n//     name: Yup.string()\n//         .min(2)\n//         .max(20)\n//         .matches(\n//             REGEX_NAME,\n//             'Name may contain only letters, apostrophe, dash and spaces'\n//         )\n//         .required(),\n//     number: Yup.string()\n//         .matches(\n//             REGEX_NUMBER,\n//             'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n//         )\n//         .required(),\n// });\n\nimport { useCreateMutation, useGetContactsQuery } from 'redux/auth/apiSlice';\nimport { Report } from 'notiflix/build/notiflix-report-aio';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\nimport { StyledButton } from \"./FormAddContact.styled\"\n\nexport const FormAddContact = () => {\n    const [ create ] = useCreateMutation()\n    const { data } = useGetContactsQuery()\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        const form = new FormData(event.currentTarget);\n\n        const newContact = {\n            name: form.get('name'),\n            number: form.get('number'),            \n        }\n\n            // check uniq contact\n        if (!checkUniq(newContact.name, data)) {\n            try {\n                await create(newContact)                \n                Notify.success('The contact has been sent to storage', {\n                                position: 'center-top',\n                            });\n            } catch (error){\n                console.log(error)\n            }\n            event.target.reset()\n        } else {\n            Report.warning(\n                'Sorry',\n                'Not a unique contact - write a new one!',\n                'Okay'\n            );\n        }\n    };\n\n    return (     \n    <Container component=\"main\" maxWidth=\"xs\">\n        <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 3 }}>\n            <Grid container spacing={2}>\n            <Grid item xs={12}>\n                <TextField                    \n                name=\"name\"\n                type=\"text\"\n                required\n                fullWidth \n                label=\"User Name\"\n                autoComplete=\"off\"    \n                />\n            </Grid>\n            <Grid item xs={12}>\n                <TextField\n                required\n                fullWidth\n                label=\"Phone number\"\n                name=\"number\"\n                type=\"text\"\n                autoComplete=\"off\"\n                />\n            </Grid>                \n            </Grid>\n            <StyledButton\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n                >\n                Create\n            </StyledButton>\n        </Box>\n    </Container>\n    )\n};\n\nconst checkUniq = (name, data) => {\n    const newName = name.toLowerCase();\n    return data.find(({ name }) => name.toLowerCase() === newName);\n};\n    \n    // return (\n    //     <p>form</p>\n        // <Formik\n        //     initialValues={{ name: '', number: '' }}\n        //     onSubmit={sendContact}\n        //     validationSchema={contactSchema}\n        // >\n        //     <Form autoComplete=\"off\">\n        //         <label>\n        //             <IconContext.Provider value={{ className: 'global-icon' }}>\n        //                 <RiContactsFill />\n        //             </IconContext.Provider>\n        //             Name:\n        //             <Field type=\"text\" name=\"name\" />\n        //             <ErrorMessage name=\"name\" component={'span'} />\n        //         </label>\n        //         <label>\n        //             <IconContext.Provider value={{ className: 'global-icon' }}>\n        //                 <RiUserVoiceFill />\n        //             </IconContext.Provider>\n        //             Number:\n        //             <Field type=\"tel\" name=\"number\" />\n        //             <ErrorMessage name=\"number\" component={'span'} />\n        //         </label>\n        //         <button type=\"submit\">\n        //             <IconContext.Provider value={{ className: 'global-icon' }}>\n        //                 <RiUserFollowFill />\n        //             </IconContext.Provider>\n        //             Add contact\n        //         </button>\n        //     </Form>\n        // </Formik>\n    // );\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { clearChange } from 'redux/contacts/contactsSlice';\nimport { useChangeMutation } from 'redux/auth/apiSlice';\nimport { selectItemChange } from 'redux/selectors';\n\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst theme = createTheme();\n\nexport const FormChangeContact = () => {\n    const [ change ] = useChangeMutation()\n    const {id, name, number} = useSelector(selectItemChange)\n    const dispatch = useDispatch()\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        const form = new FormData(event.currentTarget);\n\n        const newContact = {\n            id,\n            name: form.get('name'),\n            number: form.get('number'),            \n        }\n\n        event.target.reset()\n\n        try {\n            if(name !== newContact.name || number !==newContact.number) {\n                await change(newContact) \n                Notify.success(\n                    'The contact has been change in storage',\n                    { position: 'center-top' })           \n            }\n            dispatch(clearChange())\n        } catch (error){\n            console.log(error)\n        }\n    }\n\n    return (\n    <ThemeProvider theme={theme}>\n    <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n        sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n        }}\n        >\n            <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 3 }}>\n                <Grid container spacing={2}>\n                <Grid item xs={12}>\n                    <TextField                    \n                    name=\"name\"\n                    type=\"text\"\n                    defaultValue={name}\n                    required\n                    fullWidth \n                    label=\"User Name\"\n                    autoComplete=\"off\"             \n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                    required\n                    fullWidth\n                    label=\"Phone number\"\n                    name=\"number\"\n                    type=\"text\"\n                    defaultValue={number}\n                    autoComplete=\"off\"\n                    />\n                </Grid>                \n                </Grid>\n                <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    sx={{ mt: 3, mb: 2 }}\n                    >\n                    Change\n                </Button>\n            </Box>\n        </Box>       \n    </Container>\n    </ThemeProvider>\n\n    )\n};\n\n// defaultValue","import { useDispatch } from \"react-redux\";\nimport { setFilter } from \"../../redux/contacts/contactsSlice\"\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\n\nexport const Filter = () => {\n    const dispatch = useDispatch()\n\n    const handleSetFilter = ({currentTarget})=>{\n        dispatch(setFilter(currentTarget.value))\n    }\n\n    return (       \n        <Box component=\"div\" sx={{ position: \"sticky\", top: \"70px\"}}>\n            <TextField                                        \n                    name=\"find\"\n                    type=\"text\"\n                    label=\"Find contacts by name\"\n                    autoComplete=\"off\"\n                    onChange={handleSetFilter}\n                    />\n            </Box>\n            \n    );\n};","import styled from '@emotion/styled';\nimport {Button, styled as styledMui } from \"@mui/material\"\nimport ControlCameraIcon from '@mui/icons-material/ControlCamera';\n\nexport const StyledItem = styled.li`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    margin: 0;\n    padding: 0;    \n`\n\nexport const StyledContact = styled.div`\n    display: flex;\n    align-items: center;\n`\n\nexport const StyledControlCameraIcon = styledMui(ControlCameraIcon)`\n    margin-right: 5px;\n`\n\nexport const StyledButton = styledMui(Button)`\n    padding: 6px 6px;\n    background-color: skyblue;\n\n    &:hover, &:focus{\n        background-color: black;\n    }\n`","import { useDispatch } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { changeContact } from \"../../redux/contacts/contactsSlice\" // deleteContact, \nimport { useRemoveMutation } from \"../../redux/auth/apiSlice\" //useChangeMutation\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { StyledItem, StyledContact, StyledControlCameraIcon, StyledButton} from \"./Contact.styled\"\n\nexport const Contact = ({ contact }) => {\n    const { id, name, number } = contact;\n    const [ remove ] = useRemoveMutation()\n    const dispatch = useDispatch()\n\n    const handleDeleteContact = async ()=>{\n        try{\n            await remove(id)\n            Notify.success(\n            'The contact has been remove from storage',\n            { position: 'center-top' })\n        } catch(error){\n            console.log(error)\n        } \n    }\n\n    const handleChangeContact = async ()=>{\n        dispatch(changeContact(contact))\n    }\n\n    return (\n        <StyledItem>\n            <StyledContact>\n                <StyledControlCameraIcon/>\n                {name}: {number}\n            </StyledContact>\n            <ButtonGroup variant=\"contained\" aria-label=\"outlined primary button group\">\n            <StyledButton \n                onClick={handleDeleteContact}\n                >\n                    <DeleteIcon/>\n            </StyledButton>\n            <StyledButton \n                onClick={handleChangeContact}\n                >\n                    <EditIcon/>\n                </StyledButton>\n            </ButtonGroup>           \n        </StyledItem>\n    );\n};\n\nContact.propTypes = {\n    contact: PropTypes.shape({\n        id: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.number,            \n          ]),\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n    }).isRequired,\n};","import styled from '@emotion/styled';\n\nexport const StyledList = styled.ul`\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    margin: 0;\n    padding: 0;\n    list-style: none;\n`","import { useSelector} from \"react-redux\";\nimport { selectFilter } from 'redux/selectors';\nimport { useGetContactsQuery } from \"redux/auth/apiSlice\";\n\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nimport { Filter } from 'components/Filter';\nimport { Contact } from 'components/Contact';\n\nimport { StyledList } from \"./ContactList.styled\"\n\nexport const ContactsList = () => {\n    const {data, isLoading, error, isSuccess} = useGetContactsQuery()\n    const filter = useSelector(selectFilter)\n\n    if(isLoading && !error){\n        return (\n            <b>Request in progress...</b>\n        )\n    }\n\n    if (error){\n        Notify.failure(error, { position: 'center-top' })\n        return (    \n            <>{!isLoading && <b>Error</b>}</>                         \n        )\n    }      \n\n    if (isSuccess) {\n        const findName = filter.toLowerCase();\n        const visibleContacts = data.filter(({ name }) =>\n            name.toLowerCase().includes(findName));\n \n        return (\n            <div>\n                <Filter/>\n                <StyledList>\n                    {visibleContacts.length !== 0 && visibleContacts.map(item => <Contact key={item.id} contact={item}/>)}                        \n                </StyledList>\n            </div>\n        )   \n    } \n}","import { useSelector } from \"react-redux\";\nimport { selectIsChange } from 'redux/selectors';\nimport { FormAddContact } from 'components/FormAddContact';\nimport { FormChangeContact } from 'components/FormChangeContact';\nimport { ContactsList } from 'components/ContactsList';\n\nconst Contacts = () => {\n  const isChange = useSelector(selectIsChange)\n    return (\n        <div>       \n            <FormAddContact/>\n            {isChange &&  <FormChangeContact/>}\n            <ContactsList/>\n      </div>\n    )\n}\n\nexport default Contacts"],"names":["StyledButton","styled","Button","FormAddContact","useCreateMutation","create","data","useGetContactsQuery","handleSubmit","event","preventDefault","form","FormData","currentTarget","newContact","name","get","number","checkUniq","Notify","position","console","log","target","reset","Report","Container","component","maxWidth","Box","onSubmit","sx","mt","Grid","container","spacing","item","xs","TextField","type","required","fullWidth","label","autoComplete","variant","mb","newName","toLowerCase","find","theme","createTheme","FormChangeContact","useChangeMutation","change","useSelector","selectItemChange","id","dispatch","useDispatch","clearChange","ThemeProvider","CssBaseline","marginTop","display","flexDirection","alignItems","defaultValue","Filter","top","onChange","setFilter","value","StyledItem","StyledContact","StyledControlCameraIcon","styledMui","ControlCameraIcon","Contact","contact","useRemoveMutation","remove","handleDeleteContact","handleChangeContact","changeContact","ButtonGroup","onClick","Delete","Edit","StyledList","ContactsList","isLoading","error","isSuccess","filter","selectFilter","findName","visibleContacts","includes","length","map","isChange","selectIsChange"],"sourceRoot":""}