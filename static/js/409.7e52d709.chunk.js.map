{"version":3,"file":"static/js/409.7e52d709.chunk.js","mappings":"yaAIaA,GAAeC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,CAAH,iJASZE,GAAaF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,6C,UCKVI,EAAgB,WACzB,OAAkBC,EAAAA,EAAAA,MAAVC,GAAR,eACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,WAAS,GAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAIMC,EAAY,mCAAG,WAAOC,GAAP,kFACjBA,EAAMC,iBACAC,EAAO,IAAIC,SAASH,EAAMI,eAE1BC,EAAY,CACdC,MAAOJ,EAAKK,IAAI,SAChBC,SAAUN,EAAKK,IAAI,aAGvBP,EAAMS,OAAOC,QATI,kBAYUjB,EAAMY,GAZhB,OAYPM,EAZO,OAabjB,GAASkB,EAAAA,EAAAA,KAAe,UAAID,KAbf,kDAebE,QAAQC,IAAR,MAfa,0DAAH,sDAmBlB,OACI,SAACC,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,UACQ,UAACC,EAAA,EAAD,CAAKF,UAAU,OAAOG,SAAUpB,EAAcqB,GAAI,CAAEC,GAAI,GAAxD,WACI,UAACC,EAAA,GAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,WACA,SAACF,EAAA,GAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,UACI,SAACC,EAAA,EAAD,CACAC,UAAQ,EACRC,WAAS,EACTC,MAAM,QACNC,KAAK,QACLC,KAAK,QACLC,aAAa,WAGjB,SAACX,EAAA,GAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,UACA,UAACQ,EAAA,EAAD,CAAaL,WAAS,EAACM,QAAQ,WAA/B,WACI,SAACC,EAAA,EAAD,CAAYC,QAAQ,WAApB,uBACA,SAACC,EAAA,EAAD,CACIR,MAAM,WACNC,KAAK,WACLH,UAAQ,EACRI,KAAMnC,EAAe,OAAS,WAC9B0C,cACA,SAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,UACI,SAACC,EAAA,EAAD,CACA,aAAW,6BACXC,QA/CI,kBAAM7C,GAAgB,SAAC8C,GAAD,OAAWA,CAAX,GAAtB,EAgDJC,KAAK,MAHL,SAKChD,GAAe,SAACiD,EAAA,EAAD,KAAoB,SAACC,EAAA,EAAD,mBAQhD,SAAC7D,EAAD,CACI8C,KAAK,SACLH,WAAS,EACTM,QAAQ,YACRf,GAAI,CAAEC,GAAI,EAAG2B,GAAI,GAJrB,oBAQA,SAAC1B,EAAA,GAAD,CAAMC,WAAS,EAAC0B,eAAe,SAA/B,UACA,SAAC3B,EAAA,GAAD,CAAMG,MAAI,EAAV,UACI,SAACpC,EAAD,CAAY6D,GAAG,gBAAf,sDAQvB,EC3FD,EANc,WACV,OACI,SAAC3D,EAAD,GAEP,C","sources":["components/FormLoginUser/FormLoginUser.styled.js","components/FormLoginUser/FormLoginUser.js","pages/Login.js"],"sourcesContent":["import {Button, styled } from \"@mui/material\"\nimport { Link } from \"react-router-dom\"\n\n\nexport const StyledButton = styled(Button)`\n    padding: 6px 6px;\n    background-color: skyblue;\n\n    &:hover, &:focus{\n        background-color: black;\n    }\n`\n\nexport const StyledLink = styled(Link)`\n    color: inherit;\n`","import { useState } from \"react\"\nimport { useDispatch } from \"react-redux\";\nimport { setCredentials } from 'redux/auth/authSlice';\nimport { useLoginMutation } from 'redux/auth/apiSlice';\n\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport TextField from '@mui/material/TextField';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport IconButton from '@mui/material/IconButton';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\nimport { StyledButton, StyledLink } from \"./FormLoginUser.styled\"\n\nexport const FormLoginUser = () => {\n    const [ login ] = useLoginMutation()\n    const dispatch = useDispatch()\n    const [showPassword, setShowPassword] = useState(false);\n\n    const handleClickShowPassword = () => setShowPassword((show) => !show);\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        const form = new FormData(event.currentTarget);\n\n        const valueForm = {           \n            email: form.get('email'),\n            password: form.get('password'),\n        }\n\n        event.target.reset()\n\n        try {\n            const userData = await login(valueForm)           \n            dispatch(setCredentials({...userData}))\n        } catch (error){\n            console.log(error)\n        }\n    };\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n                <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 3 }}>\n                    <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <TextField\n                        required\n                        fullWidth\n                        label=\"Email\"\n                        name=\"email\"\n                        type=\"email\"\n                        autoComplete=\"off\"\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                    <FormControl fullWidth variant=\"outlined\">\n                        <InputLabel htmlFor=\"password\">Password</InputLabel>\n                        <OutlinedInput\n                            label=\"Password\"\n                            name=\"password\"     \n                            required                                                   \n                            type={showPassword ? 'text' : 'password'}                            \n                            endAdornment={\n                            <InputAdornment position=\"end\">\n                                <IconButton\n                                aria-label=\"toggle password visibility\"\n                                onClick={handleClickShowPassword}      \n                                edge=\"end\"\n                                >\n                                {showPassword ? <VisibilityOff /> : <Visibility />}\n                                </IconButton>\n                            </InputAdornment>\n                            }                 \n                        />\n                        </FormControl>\n                    </Grid>\n                    </Grid>\n                    <StyledButton\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        sx={{ mt: 3, mb: 2 }}\n                        >\n                        Login\n                    </StyledButton>\n                    <Grid container justifyContent=\"center\">\n                    <Grid item>\n                        <StyledLink to=\"/registration\">\n                            Don't have account? Registration\n                        </StyledLink>\n                    </Grid>\n                    </Grid>\n                </Box>      \n        </Container>\n    );\n}","import { FormLoginUser } from \"../components/FormLoginUser\"\n\nconst Login = () => {\n    return(\n        <FormLoginUser/>\n    )\n}\n\nexport default Login"],"names":["StyledButton","styled","Button","StyledLink","Link","FormLoginUser","useLoginMutation","login","dispatch","useDispatch","useState","showPassword","setShowPassword","handleSubmit","event","preventDefault","form","FormData","currentTarget","valueForm","email","get","password","target","reset","userData","setCredentials","console","log","Container","component","maxWidth","Box","onSubmit","sx","mt","Grid","container","spacing","item","xs","TextField","required","fullWidth","label","name","type","autoComplete","FormControl","variant","InputLabel","htmlFor","OutlinedInput","endAdornment","InputAdornment","position","IconButton","onClick","show","edge","VisibilityOff","Visibility","mb","justifyContent","to"],"sourceRoot":""}