{"version":3,"file":"static/js/856.3d6717b7.chunk.js","mappings":"ybAqBMA,GAAQC,EAAAA,EAAAA,KAEDC,EAAgB,WACzB,OAAkBC,EAAAA,EAAAA,MAAVC,GAAR,eACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,WAAS,GAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAIMC,EAAY,mCAAG,WAAOC,GAAP,kFACjBA,EAAMC,iBACAC,EAAO,IAAIC,SAASH,EAAMI,eAE1BC,EAAY,CACdC,MAAOJ,EAAKK,IAAI,SAChBC,SAAUN,EAAKK,IAAI,aAGvBP,EAAMS,OAAOC,QATI,kBAYUjB,EAAMY,GAZhB,OAYPM,EAZO,OAabjB,GAASkB,EAAAA,EAAAA,KAAe,UAAID,KAbf,kDAebE,QAAQC,IAAR,MAfa,0DAAH,sDAmBlB,OACI,SAACC,EAAA,EAAD,CAAe1B,MAAOA,EAAtB,UACA,UAAC2B,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,WACI,SAACC,EAAA,GAAD,KACA,SAACC,EAAA,EAAD,CACAC,GAAI,CACAC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UALhB,UAQI,UAACL,EAAA,EAAD,CAAKH,UAAU,OAAOS,SAAU3B,EAAcsB,GAAI,CAAEM,GAAI,GAAxD,WACI,UAACC,EAAA,GAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,WACA,SAACF,EAAA,GAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,UACI,SAACC,EAAA,EAAD,CACAC,UAAQ,EACRC,WAAS,EACTC,MAAM,QACNC,KAAK,QACLC,KAAK,QACLC,aAAa,WAGjB,SAACX,EAAA,GAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,UACA,UAACQ,EAAA,EAAD,CAAaL,WAAS,EAACM,QAAQ,WAA/B,WACI,SAACC,EAAA,EAAD,CAAYC,QAAQ,WAApB,uBACA,SAACC,EAAA,EAAD,CACIR,MAAM,WACNC,KAAK,WACLH,UAAQ,EACRI,KAAMzC,EAAe,OAAS,WAC9BgD,cACA,SAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,UACI,SAACC,EAAA,EAAD,CACA,aAAW,6BACXC,QAzDI,kBAAMnD,GAAgB,SAACoD,GAAD,OAAWA,CAAX,GAAtB,EA0DJC,KAAK,MAHL,SAKCtD,GAAe,SAACuD,EAAA,EAAD,KAAoB,SAACC,EAAA,EAAD,mBAQhD,SAACC,EAAA,EAAD,CACIhB,KAAK,SACLH,WAAS,EACTM,QAAQ,YACRpB,GAAI,CAAEM,GAAI,EAAG4B,GAAI,GAJrB,oBAQA,SAAC3B,EAAA,GAAD,CAAMC,WAAS,EAAC2B,eAAe,SAA/B,UACA,SAAC5B,EAAA,GAAD,CAAMG,MAAI,EAAV,UACI,SAAC,KAAD,CAAM0B,GAAG,gBAAT,2DAUvB,EC5GD,EANc,WACV,OACI,SAAClE,EAAD,GAEP,C","sources":["components/FormLoginUser/FormLoginUser.js","pages/Login.js"],"sourcesContent":["import { useState } from \"react\"\nimport { useDispatch } from \"react-redux\";\nimport { setCredentials } from 'redux/auth/authSlice';\nimport { useLoginMutation } from 'redux/auth/apiSlice';\nimport { Link } from \"react-router-dom\"\n\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport IconButton from '@mui/material/IconButton';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nconst theme = createTheme();\n\nexport const FormLoginUser = () => {\n    const [ login ] = useLoginMutation()\n    const dispatch = useDispatch()\n    const [showPassword, setShowPassword] = useState(false);\n\n    const handleClickShowPassword = () => setShowPassword((show) => !show);\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        const form = new FormData(event.currentTarget);\n\n        const valueForm = {           \n            email: form.get('email'),\n            password: form.get('password'),\n        }\n\n        event.target.reset()\n\n        try {\n            const userData = await login(valueForm)           \n            dispatch(setCredentials({...userData}))\n        } catch (error){\n            console.log(error)\n        }\n    };\n\n    return (\n        <ThemeProvider theme={theme}>\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <Box\n            sx={{\n                marginTop: 8,\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n            }}\n            >\n                <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 3 }}>\n                    <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <TextField\n                        required\n                        fullWidth\n                        label=\"Email\"\n                        name=\"email\"\n                        type=\"email\"\n                        autoComplete=\"off\"\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                    <FormControl fullWidth variant=\"outlined\">\n                        <InputLabel htmlFor=\"password\">Password</InputLabel>\n                        <OutlinedInput\n                            label=\"Password\"\n                            name=\"password\"     \n                            required                                                   \n                            type={showPassword ? 'text' : 'password'}                            \n                            endAdornment={\n                            <InputAdornment position=\"end\">\n                                <IconButton\n                                aria-label=\"toggle password visibility\"\n                                onClick={handleClickShowPassword}      \n                                edge=\"end\"\n                                >\n                                {showPassword ? <VisibilityOff /> : <Visibility />}\n                                </IconButton>\n                            </InputAdornment>\n                            }                 \n                        />\n                        </FormControl>\n                    </Grid>\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        sx={{ mt: 3, mb: 2 }}\n                        >\n                        Login\n                    </Button>\n                    <Grid container justifyContent=\"center\">\n                    <Grid item>\n                        <Link to=\"/registration\">\n                            Don't have account? Registration\n                        </Link>\n                    </Grid>\n                    </Grid>\n                </Box>\n            </Box>       \n        </Container>\n        </ThemeProvider>\n    );\n}","import { FormLoginUser } from \"../components/FormLoginUser\"\n\nconst Login = () => {\n    return(\n        <FormLoginUser/>\n    )\n}\n\nexport default Login"],"names":["theme","createTheme","FormLoginUser","useLoginMutation","login","dispatch","useDispatch","useState","showPassword","setShowPassword","handleSubmit","event","preventDefault","form","FormData","currentTarget","valueForm","email","get","password","target","reset","userData","setCredentials","console","log","ThemeProvider","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","onSubmit","mt","Grid","container","spacing","item","xs","TextField","required","fullWidth","label","name","type","autoComplete","FormControl","variant","InputLabel","htmlFor","OutlinedInput","endAdornment","InputAdornment","position","IconButton","onClick","show","edge","VisibilityOff","Visibility","Button","mb","justifyContent","to"],"sourceRoot":""}