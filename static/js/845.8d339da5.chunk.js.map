{"version":3,"file":"static/js/845.8d339da5.chunk.js","mappings":"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","sources":["components/UserMenu/UserMenu.js","components/Menu/Menu.js","components/Header/Header.js"],"sourcesContent":["import { useState } from \"react\"\nimport { Link } from \"react-router-dom\"\n\nimport { useDispatch } from \"react-redux\";\nimport { setLogout } from 'redux/auth/authSlice';\nimport { useLogoutMutation } from 'redux/auth/apiSlice';\n\nimport Box from '@mui/material/Box';\nimport IconButton from '@mui/material/IconButton';\nimport Menu from '@mui/material/Menu';\nimport Avatar from '@mui/material/Avatar';\nimport Tooltip from '@mui/material/Tooltip';\nimport MenuItem from '@mui/material/MenuItem';\nimport avatar from \"../../images/avatar.JPG\"\n\nexport const UserMenu = () =>{   \n    const [anchorElUser, setAnchorElUser] = useState(null);\n    const [ logout ] = useLogoutMutation()\n    const dispatch = useDispatch()\n\n    const handleLogout = async () => {\n        try {\n            await logout()      \n            dispatch(setLogout())\n        } catch (error){\n            console.log(error)\n        }\n    }\n\n    const handleOpenUserMenu = (event) => {\n        setAnchorElUser(event.currentTarget);\n    };\n\n    const handleCloseUserMenu = () => {\n        setAnchorElUser(null);\n    };  \n\n    return (<>\n       <Box sx={{ flexGrow: 0 }}>\n            <Tooltip title=\"Open settings\">\n              <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\n                <Avatar alt=\"avatar\" src={avatar} />\n              </IconButton>\n            </Tooltip>\n            <Menu\n              sx={{ mt: '45px' }}\n              id=\"menu-appbar\"\n              anchorEl={anchorElUser}\n              anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              open={Boolean(anchorElUser)}\n              onClose={handleCloseUserMenu}\n            >\n             <MenuItem onClick={handleCloseUserMenu}>\n                <Link to=\"profile\">\n                    Profile\n                </Link>\n            </MenuItem>\n            <MenuItem onClick={()=>{\n                handleCloseUserMenu()\n                handleLogout()\n            }}>\n                <Link to=\"/\">\n                    Logout\n                </Link>            \n            </MenuItem>  \n            </Menu>\n          </Box>\n    </>)\n}","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport { Link } from \"react-router-dom\"\nimport { useSelector } from \"react-redux\";\nimport { selectIsLoggedIn } from '../../redux/selectors'; \nimport { UserMenu } from \"../UserMenu\"\n\nexport const BasicMenu = () =>{\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const isLoggedIn = useSelector(selectIsLoggedIn)\n  const open = Boolean(anchorEl);\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div>\n      {isLoggedIn ? \n      <UserMenu/> : \n      <>\n        <Button\n          id=\"basic-button\"\n          aria-controls={open ? 'basic-menu' : undefined}\n          aria-haspopup=\"true\"\n          aria-expanded={open ? 'true' : undefined}\n          onClick={handleClick}\n          color=\"inherit\"\n        >\n          <MenuIcon />\n        </Button>\n        <Menu\n          id=\"basic-menu\"\n          anchorEl={anchorEl}\n          open={open}\n          onClose={handleClose}\n          MenuListProps={{\n            'aria-labelledby': 'basic-button',\n          }}\n        >\n          <MenuItem onClick={handleClose}>\n            <Link to=\"registration\">\n                Registration\n            </Link>\n            </MenuItem>\n            <MenuItem onClick={handleClose}>\n                <Link to=\"login\">\n                    Login\n                </Link>            \n            </MenuItem>            \n        </Menu>\n      </>\n      }      \n    </div>\n  );\n}","// import * as React from 'react';\nimport { Suspense } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectIsLoggedIn } from '../../redux/selectors'; \nimport { NavLink, Link } from \"react-router-dom\"\nimport { Outlet } from \"react-router-dom\"\nimport { BasicMenu } from \"../Menu\"\n\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\n\nconst navItems = [\n  {\n    page: 'Contacts',\n    link: 'contacts'\n  },\n];\n\nexport const Header = () => {\n  const isLoggedIn = useSelector(selectIsLoggedIn)\n  return (<>     \n        <AppBar position=\"fixed\">\n          <Box sx={{ flexGrow: 1 }}>\n            <Toolbar>\n              <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n                <Link to=\"/\">\n                  Phonebook\n                </Link> \n              </Typography>\n            \n              {isLoggedIn && <Box >\n                {navItems.map(({page, link}) => (\n                  <Button key={page} sx={{ color: '#fff' }}>\n                    <NavLink to={link}>\n                      {page}\n                    </NavLink>   \n                  </Button>\n                ))}\n              </Box>}          \n\n              <BasicMenu/>\n            </Toolbar>\n          </Box>\n        </AppBar>\n      \n\n      <Suspense fallback={<div>Loading page...</div>}>\n        <main>\n            <Outlet />\n        </main>\n      </Suspense>\n    </>\n  );\n}\n\n\n\n\n"],"names":["UserMenu","useState","anchorElUser","setAnchorElUser","useLogoutMutation","logout","dispatch","useDispatch","handleLogout","setLogout","console","log","handleCloseUserMenu","Box","sx","flexGrow","Tooltip","title","IconButton","onClick","event","currentTarget","p","Avatar","alt","src","avatar","Menu","mt","id","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","MenuItem","to","BasicMenu","React","setAnchorEl","isLoggedIn","useSelector","selectIsLoggedIn","handleClose","Button","undefined","color","MenuListProps","navItems","page","link","Header","AppBar","position","Toolbar","Typography","variant","component","map","Suspense","fallback"],"sourceRoot":""}