{"version":3,"file":"static/js/920.a7e0c4e1.chunk.js","mappings":"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","sources":["components/regex.js","components/FormRegUser/FormRegUser.styled.js","components/FormRegUser/FormRegUser.js","pages/Registration.js","../node_modules/@mui/icons-material/Visibility.js","../node_modules/@mui/icons-material/VisibilityOff.js"],"sourcesContent":["export const customRegex = {\n    name: /^([a-zA-ZА-ЩЬЮЯҐЄІЇа-щьюяґєії]+['`’\" -])*((['`’\" -][a-zA-ZА-ЩЬЮЯҐЄІЇа-щьюяґєії])?[a-zA-ZА-ЩЬЮЯҐЄІЇа-щьюяґєії]*)*$/,\n    email: /^[^\\s,\\\\\\\\/\\\\|@][a-zA-Z\\d\\\\-]*@[^\\s,\\\\\\\\/\\\\|\\\\.@][a-zA-Z\\d\\\\-]*\\.[a-zA-Z]{2,}$/,\n    password: /^[^\\s.][a-zA-Z\\d-]{7,}$/,\n    number: /^[+]?\\d{2,7}[(\\- .\\s]?\\d{2,7}([)\\- .\\s]?\\d{2,7})*$/,\n}\n\n","import { Grid, IconButton, Button, styled } from \"@mui/material\"\nimport { TextField as TextFieldFormik } from 'formik-mui';\n\nimport { Link } from \"react-router-dom\"\n\n// MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-colorPrimary Mui-error MuiFormLabel-filled Mui-required MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined css-1sumxir-MuiFormLabel-root-MuiInputLabel-root\n\nexport const StyledTextField = styled(TextFieldFormik)`\n/* MuiFormControl-root MuiFormControl-fullWidth MuiTextField-root css-dbcl7b-MuiFormControl-root-MuiTextField-root */\n\n\n/* MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined MuiFormLabel-colorPrimary Mui-error Mui-required MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined css-14s5rfu-MuiFormLabel-root-MuiInputLabel-root */\n  /* & label.Mui-focused {\n    color: black;\n  }  */\n\n  /* MuiInputBase-root MuiOutlinedInput-root MuiInputBase-colorPrimary Mui-error MuiInputBase-fullWidth MuiInputBase-formControl css-md26zr-MuiInputBase-root-MuiOutlinedInput-root{\n    border-color: green;   \n  } */\n\n  /* &.css-1sumxir-MuiFormLabel-root-MuiInputLabel-root.Mui-focused{\n    border-color: skyblue;  \n  }    \n       */\n  /* &.css-1sumxir-MuiFormLabel-root-MuiInputLabel-root.Mui-error {      \n    border-color: green;        \n  } */\n`;\n\n\nexport const StyledGrid = styled(Grid)`\n  position: relative;\n`\n\nexport const StyledIconButton = styled(IconButton)`\n  position: absolute;\n  top: 23px;\n  right: 10px;\n`\n\nexport const StyledButton = styled(Button)`\n    padding: 6px 6px;\n    background-color: skyblue;\n\n    &:hover, &:focus{\n        background-color: black;\n    }\n`\n\nexport const StyledLink = styled(Link)`\n    color: inherit;\n`","import { useState } from \"react\"\nimport { useDispatch } from \"react-redux\";\nimport { setCredentials } from 'redux/auth/authSlice';\nimport { useSignupMutation } from 'redux/auth/apiSlice';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { customRegex } from \"components/regex\";\n\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport Grid from '@mui/material/Grid';\nimport Container from '@mui/material/Container';\n\nimport { StyledTextField, StyledGrid, StyledIconButton, StyledButton, StyledLink } from \"./FormRegUser.styled\"\n\nconst DEFAULT_VALUES = {\n    name: '',\n    email: '',\n    password: '',\n}\n\nconst VALIDATION_SCHEMA = Yup.object().shape({\n    name: Yup.string()\n        .trim()\n        .min(4, 'Too Short! Min 4 symbols')\n        .max(50, 'Too Long! Max 50 symbols')\n        .matches(\n            customRegex.name,\n            'Name may contain only Eng or Ua letters, apostrophe, spaces and dash'\n        )\n        .required('Required'),    \n    email: Yup.string()\n        .trim()\n        .min(6, 'Too Short! Min 6 symbols')\n        .max(50, 'Too Long! Max 50 symbols')\n        .matches(\n            customRegex.email,\n            'Email may contain only Eng letters. Not use spaces and some symbols / | \\\\ ,'\n        )\n        .required('Required'),\n    password: Yup.string()\n        .trim()\n        .min(8, 'Too Short! Min 8 symbols!')\n        .max(50, 'Too Long! Max 50 symbols')\n        .matches(\n            customRegex.password,\n            'Password may contain only Eng letters and digits, dash. Not use spaces and other symbols.'\n        )\n        .required('Required'),\n});\n\nexport const FormRegUser = () => {\n    const [ signup ] = useSignupMutation()\n    const [ showPassword, setShowPassword ] = useState(false);\n    const dispatch = useDispatch()\n\n    const handleClickShowPassword = () => setShowPassword((show) => !show);\n\n    const handleSubmit = async ({ name, email, password }, { resetForm }) => {\n        const newUser = {\n            name,\n            email,\n            password,\n        }                \n\n        try {\n            const userData = await signup(newUser)  \n            if ( userData?.data ) {\n                dispatch(setCredentials({...userData}))\n                resetForm()\n                return\n            }\n  \n            if ( userData?.error?.status === 400 ) {\n                Notify.failure('User creation error', {\n                    position: 'center-top',\n                });\n            }\n\n            if ( userData?.error?.status === 500 ) {\n                Notify.failure('Server error', {\n                    position: 'center-top',\n                });\n            }            \n        } catch (error){\n            console.log(error)\n        }\n    };\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <Formik\n                initialValues={ DEFAULT_VALUES }\n                validationSchema={ VALIDATION_SCHEMA }\n                onSubmit={handleSubmit}\n            >       \n            {({ isValid, dirty }) => (             \n                <Form autoComplete=\"off\">\n                        <Grid container spacing={2} sx={{ mt: 3 }}>\n                            <Grid item xs={12}>                           \n                                <Field \n                                    component={ StyledTextField }\n                                    name=\"name\"\n                                    type=\"text\"                                \n                                    fullWidth \n                                    title=\"min 4 symbols\"  \n                                    label=\"User Name\"      \n                                    required          \n                                />        \n                            </Grid>\n\n                            <Grid item xs={12}>\n                                <Field\n                                    component={ StyledTextField }\n                                    fullWidth\n                                    title=\"Example: segio2023@g7-top.com\"  \n                                    label=\"Email\"\n                                    name=\"email\"\n                                    type=\"email\"  \n                                    required                \n                                />                            \n                            </Grid>\n\n                            <StyledGrid item xs={12}>\n                                <Field\n                                    component={ StyledTextField }\n                                    fullWidth\n                                    label=\"Password\"\n                                    name=\"password\"\n                                    type={showPassword ? 'text' : 'password'} \n                                    title=\"min 8 symbols\"       \n                                    required                          \n                                />       \n                                <StyledIconButton\n                                    aria-label=\"toggle password visibility\"\n                                    onClick={handleClickShowPassword}                          \n                                >\n                                    {showPassword ? <VisibilityOff /> : <Visibility />}\n                                </StyledIconButton>                     \n                            </StyledGrid>\n                        </Grid>\n\n                        <StyledButton                      \n                            fullWidth\n                            variant=\"contained\"\n                            sx={{ mt: 3, mb: 2 }}\n                            type=\"submit\"                           \n                            disabled={!(isValid && dirty)}\n                            >\n                            Sign Up\n                        </StyledButton>\n                    \n                        <Grid container justifyContent=\"center\">\n                            <Grid item>\n                                <StyledLink to=\"/login\">\n                                    Already have an account? Login\n                                </StyledLink>    \n                            </Grid>\n                        </Grid>        \n                </Form> \n            )}   \n            </Formik>  \n        </Container>\n    );\n}","import { FormRegUser } from \"../components/FormRegUser\"\n\nconst Registration = () => {\n    return(     \n        <>\n        <FormRegUser/>\n        </>\n    )\n}\n\nexport default Registration","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\nexports.default = _default;"],"names":["customRegex","name","email","password","number","StyledTextField","styled","TextFieldFormik","StyledGrid","Grid","StyledIconButton","IconButton","StyledButton","Button","StyledLink","Link","DEFAULT_VALUES","VALIDATION_SCHEMA","Yup","shape","trim","min","max","matches","required","FormRegUser","useSignupMutation","signup","useState","showPassword","setShowPassword","dispatch","useDispatch","handleClickShowPassword","show","handleSubmit","resetForm","newUser","userData","data","setCredentials","error","status","Notify","position","console","log","Container","component","maxWidth","initialValues","validationSchema","onSubmit","isValid","dirty","autoComplete","container","spacing","sx","mt","item","xs","type","fullWidth","title","label","onClick","VisibilityOff","Visibility","variant","mb","disabled","justifyContent","to","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}